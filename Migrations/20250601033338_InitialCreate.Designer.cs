// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xpectrum_api.data;

#nullable disable

namespace Xpectrum_API.Migrations
{
    [DbContext(typeof(xpectrumContext))]
    [Migration("20250601033338_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("xpectrum_api.models.aeronave", b =>
                {
                    b.Property<int>("aeronaveid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("aeronaveid"));

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<string>("matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("aeronaveid");

                    b.ToTable("aeronaves");
                });

            modelBuilder.Entity("xpectrum_api.models.aeropuerto", b =>
                {
                    b.Property<int>("aeropuertoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("aeropuertoid"));

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoiata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("aeropuertoid");

                    b.ToTable("aeropuertos");
                });

            modelBuilder.Entity("xpectrum_api.models.asiento", b =>
                {
                    b.Property<int>("asientoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("asientoid"));

                    b.Property<string>("clase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoasiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroasiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vueloid")
                        .HasColumnType("int");

                    b.HasKey("asientoid");

                    b.HasIndex("vueloid");

                    b.ToTable("asientos");
                });

            modelBuilder.Entity("xpectrum_api.models.boleto", b =>
                {
                    b.Property<int>("boletoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("boletoid"));

                    b.Property<string>("codigoboleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoboleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaemision")
                        .HasColumnType("datetime2");

                    b.Property<int>("reservaresid")
                        .HasColumnType("int");

                    b.Property<int>("resid")
                        .HasColumnType("int");

                    b.HasKey("boletoid");

                    b.HasIndex("reservaresid");

                    b.ToTable("boletos");
                });

            modelBuilder.Entity("xpectrum_api.models.checkin", b =>
                {
                    b.Property<int>("checkinid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("checkinid"));

                    b.Property<int>("boletoid")
                        .HasColumnType("int");

                    b.Property<string>("estadocheckin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechacheckin")
                        .HasColumnType("datetime2");

                    b.Property<string>("metodocheckin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjetaembarque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("checkinid");

                    b.HasIndex("boletoid");

                    b.ToTable("checkins");
                });

            modelBuilder.Entity("xpectrum_api.models.configuracionsistema", b =>
                {
                    b.Property<int>("configuracionsistemaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("configuracionsistemaid"));

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("configuracionsistemaid");

                    b.ToTable("configuracionessistema");
                });

            modelBuilder.Entity("xpectrum_api.models.equipaje", b =>
                {
                    b.Property<int>("equipajeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("equipajeid"));

                    b.Property<string>("estadoequipaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("reservaresid")
                        .HasColumnType("int");

                    b.Property<int>("resid")
                        .HasColumnType("int");

                    b.Property<string>("tipoequipaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("equipajeid");

                    b.HasIndex("reservaresid");

                    b.ToTable("equipajes");
                });

            modelBuilder.Entity("xpectrum_api.models.logacceso", b =>
                {
                    b.Property<int>("logaccesoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("logaccesoId"));

                    b.Property<string>("accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechahora")
                        .HasColumnType("datetime2");

                    b.Property<string>("iporigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("logaccesoId");

                    b.HasIndex("usuarioid");

                    b.ToTable("logsaccesos");
                });

            modelBuilder.Entity("xpectrum_api.models.notificacion", b =>
                {
                    b.Property<int>("notificacionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("notificacionid"));

                    b.Property<string>("estadolectura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaenvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tiponotificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("notificacionid");

                    b.HasIndex("usuarioid");

                    b.ToTable("notificaciones");
                });

            modelBuilder.Entity("xpectrum_api.models.pago", b =>
                {
                    b.Property<int>("pagoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pagoid"));

                    b.Property<string>("estadopago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechapago")
                        .HasColumnType("datetime2");

                    b.Property<string>("metodopago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("referenciapago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("reservaresid")
                        .HasColumnType("int");

                    b.Property<int>("resid")
                        .HasColumnType("int");

                    b.HasKey("pagoid");

                    b.HasIndex("reservaresid");

                    b.ToTable("pagos");
                });

            modelBuilder.Entity("xpectrum_api.models.pasajeroreserva", b =>
                {
                    b.Property<int>("pasajeroreservaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pasajeroreservaid"));

                    b.Property<int>("asientoid")
                        .HasColumnType("int");

                    b.Property<string>("documentonumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documentotipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("reservaresid")
                        .HasColumnType("int");

                    b.Property<int>("resid")
                        .HasColumnType("int");

                    b.HasKey("pasajeroreservaid");

                    b.HasIndex("asientoid");

                    b.HasIndex("reservaresid");

                    b.ToTable("pasajerosreservas");
                });

            modelBuilder.Entity("xpectrum_api.models.permiso", b =>
                {
                    b.Property<string>("permisocodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrepermiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("permisocodigo");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("xpectrum_api.models.reserva", b =>
                {
                    b.Property<int>("resid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("resid"));

                    b.Property<string>("estadoreserva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechareserva")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("totalpago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("usuarioid")
                        .HasColumnType("int");

                    b.Property<int>("vueloid")
                        .HasColumnType("int");

                    b.HasKey("resid");

                    b.HasIndex("usuarioid");

                    b.HasIndex("vueloid");

                    b.ToTable("reservas");
                });

            modelBuilder.Entity("xpectrum_api.models.reservaservicio", b =>
                {
                    b.Property<int>("reservaservicioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reservaservicioid"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("reservaresid")
                        .HasColumnType("int");

                    b.Property<int>("resid")
                        .HasColumnType("int");

                    b.Property<int>("servicioadicionalid")
                        .HasColumnType("int");

                    b.HasKey("reservaservicioid");

                    b.HasIndex("reservaresid");

                    b.HasIndex("servicioadicionalid");

                    b.ToTable("reservaservicios");
                });

            modelBuilder.Entity("xpectrum_api.models.rol", b =>
                {
                    b.Property<int>("rolid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rolid"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrerol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rolid");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("xpectrum_api.models.rolpermiso", b =>
                {
                    b.Property<int>("rolpermisoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rolpermisoid"));

                    b.Property<string>("permisocodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permisocodigo1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("rolid")
                        .HasColumnType("int");

                    b.HasKey("rolpermisoid");

                    b.HasIndex("permisocodigo1");

                    b.HasIndex("rolid");

                    b.ToTable("rolespermisos");
                });

            modelBuilder.Entity("xpectrum_api.models.servicioadicional", b =>
                {
                    b.Property<int>("servicioadicionalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("servicioadicionalid"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreservicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("servicioadicionalid");

                    b.ToTable("serviciosadicionales");
                });

            modelBuilder.Entity("xpectrum_api.models.ticket", b =>
                {
                    b.Property<int>("ticketid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ticketid"));

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoticket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("ticketid");

                    b.HasIndex("usuarioid");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("xpectrum_api.models.usuario", b =>
                {
                    b.Property<int>("usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuarioid"));

                    b.Property<string>("contraseñahash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecharegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("preferenciasnotificaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipousuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuarioid");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("xpectrum_api.models.usuariorol", b =>
                {
                    b.Property<int>("usuariorolid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuariorolid"));

                    b.Property<int>("rolid")
                        .HasColumnType("int");

                    b.Property<int>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("usuariorolid");

                    b.HasIndex("rolid");

                    b.HasIndex("usuarioid");

                    b.ToTable("usuariosroles");
                });

            modelBuilder.Entity("xpectrum_api.models.vuelo", b =>
                {
                    b.Property<int>("vueloid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vueloid"));

                    b.Property<int>("aeronaveid")
                        .HasColumnType("int");

                    b.Property<string>("codigovuelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("destinoid")
                        .HasColumnType("int");

                    b.Property<string>("estadovuelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechallegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechasalida")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("horallegada")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horasalida")
                        .HasColumnType("time");

                    b.Property<int>("origenid")
                        .HasColumnType("int");

                    b.HasKey("vueloid");

                    b.HasIndex("aeronaveid");

                    b.HasIndex("destinoid");

                    b.HasIndex("origenid");

                    b.ToTable("vuelos");
                });

            modelBuilder.Entity("xpectrum_api.models.asiento", b =>
                {
                    b.HasOne("xpectrum_api.models.vuelo", "vuelo")
                        .WithMany("asientos")
                        .HasForeignKey("vueloid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vuelo");
                });

            modelBuilder.Entity("xpectrum_api.models.boleto", b =>
                {
                    b.HasOne("xpectrum_api.models.reserva", "reserva")
                        .WithMany("boletos")
                        .HasForeignKey("reservaresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reserva");
                });

            modelBuilder.Entity("xpectrum_api.models.checkin", b =>
                {
                    b.HasOne("xpectrum_api.models.boleto", "boleto")
                        .WithMany("checkins")
                        .HasForeignKey("boletoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("boleto");
                });

            modelBuilder.Entity("xpectrum_api.models.equipaje", b =>
                {
                    b.HasOne("xpectrum_api.models.reserva", "reserva")
                        .WithMany("equipajes")
                        .HasForeignKey("reservaresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reserva");
                });

            modelBuilder.Entity("xpectrum_api.models.logacceso", b =>
                {
                    b.HasOne("xpectrum_api.models.usuario", "usuario")
                        .WithMany("logsaccesos")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("xpectrum_api.models.notificacion", b =>
                {
                    b.HasOne("xpectrum_api.models.usuario", "usuario")
                        .WithMany("notificaciones")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("xpectrum_api.models.pago", b =>
                {
                    b.HasOne("xpectrum_api.models.reserva", "reserva")
                        .WithMany("pagos")
                        .HasForeignKey("reservaresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reserva");
                });

            modelBuilder.Entity("xpectrum_api.models.pasajeroreserva", b =>
                {
                    b.HasOne("xpectrum_api.models.asiento", "asiento")
                        .WithMany("pasajerosreservas")
                        .HasForeignKey("asientoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.reserva", "reserva")
                        .WithMany("pasajerosreservas")
                        .HasForeignKey("reservaresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("asiento");

                    b.Navigation("reserva");
                });

            modelBuilder.Entity("xpectrum_api.models.reserva", b =>
                {
                    b.HasOne("xpectrum_api.models.usuario", "usuario")
                        .WithMany("reservas")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.vuelo", "vuelo")
                        .WithMany("reservas")
                        .HasForeignKey("vueloid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");

                    b.Navigation("vuelo");
                });

            modelBuilder.Entity("xpectrum_api.models.reservaservicio", b =>
                {
                    b.HasOne("xpectrum_api.models.reserva", "reserva")
                        .WithMany("reservaservicios")
                        .HasForeignKey("reservaresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.servicioadicional", "servicioadicional")
                        .WithMany("reservaservicios")
                        .HasForeignKey("servicioadicionalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reserva");

                    b.Navigation("servicioadicional");
                });

            modelBuilder.Entity("xpectrum_api.models.rolpermiso", b =>
                {
                    b.HasOne("xpectrum_api.models.permiso", "permiso")
                        .WithMany("rolespermisos")
                        .HasForeignKey("permisocodigo1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.rol", "rol")
                        .WithMany("rolespermisos")
                        .HasForeignKey("rolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permiso");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("xpectrum_api.models.ticket", b =>
                {
                    b.HasOne("xpectrum_api.models.usuario", "usuario")
                        .WithMany("tickets")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("xpectrum_api.models.usuariorol", b =>
                {
                    b.HasOne("xpectrum_api.models.rol", "rol")
                        .WithMany("usuariosroles")
                        .HasForeignKey("rolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.usuario", "usuario")
                        .WithMany("usuarioroles")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("xpectrum_api.models.vuelo", b =>
                {
                    b.HasOne("xpectrum_api.models.aeronave", "aeronave")
                        .WithMany("vuelos")
                        .HasForeignKey("aeronaveid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.aeropuerto", "destino")
                        .WithMany("vuelosdestino")
                        .HasForeignKey("destinoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("xpectrum_api.models.aeropuerto", "origen")
                        .WithMany("vuelosorigen")
                        .HasForeignKey("origenid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("aeronave");

                    b.Navigation("destino");

                    b.Navigation("origen");
                });

            modelBuilder.Entity("xpectrum_api.models.aeronave", b =>
                {
                    b.Navigation("vuelos");
                });

            modelBuilder.Entity("xpectrum_api.models.aeropuerto", b =>
                {
                    b.Navigation("vuelosdestino");

                    b.Navigation("vuelosorigen");
                });

            modelBuilder.Entity("xpectrum_api.models.asiento", b =>
                {
                    b.Navigation("pasajerosreservas");
                });

            modelBuilder.Entity("xpectrum_api.models.boleto", b =>
                {
                    b.Navigation("checkins");
                });

            modelBuilder.Entity("xpectrum_api.models.permiso", b =>
                {
                    b.Navigation("rolespermisos");
                });

            modelBuilder.Entity("xpectrum_api.models.reserva", b =>
                {
                    b.Navigation("boletos");

                    b.Navigation("equipajes");

                    b.Navigation("pagos");

                    b.Navigation("pasajerosreservas");

                    b.Navigation("reservaservicios");
                });

            modelBuilder.Entity("xpectrum_api.models.rol", b =>
                {
                    b.Navigation("rolespermisos");

                    b.Navigation("usuariosroles");
                });

            modelBuilder.Entity("xpectrum_api.models.servicioadicional", b =>
                {
                    b.Navigation("reservaservicios");
                });

            modelBuilder.Entity("xpectrum_api.models.usuario", b =>
                {
                    b.Navigation("logsaccesos");

                    b.Navigation("notificaciones");

                    b.Navigation("reservas");

                    b.Navigation("tickets");

                    b.Navigation("usuarioroles");
                });

            modelBuilder.Entity("xpectrum_api.models.vuelo", b =>
                {
                    b.Navigation("asientos");

                    b.Navigation("reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
